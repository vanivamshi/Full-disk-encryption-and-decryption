# -*- coding: utf-8 -*-
"""full_disk_encryption.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iTe-EibhaZ8b7uaFO3PaX3coLMDi4CK9
"""

import subprocess
import logging

# Configure logging
logging.basicConfig(filename='bitlocker_encryption.log', level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def check_bitlocker_status(drive_letter):
    """
    Checks the BitLocker status of the specified drive.

    Parameters:
        drive_letter (str): The letter of the drive to check (e.g., 'C').

    Returns:
        str: The status of BitLocker on the drive.
    """
    try:
        result = subprocess.run(
            ["powershell", "-Command", f"Get-BitLockerVolume -MountPoint {drive_letter}: | Select-Object -ExpandProperty VolumeStatus"],
            capture_output=True, text=True, check=True
        )
        status = result.stdout.strip()
        logging.info(f"BitLocker status on drive {drive_letter}: {status}")
        return status
    except subprocess.CalledProcessError as e:
        logging.error(f"Error checking BitLocker status: {e}")
        raise

def enable_bitlocker(drive_letter, password):
    """
    Enables BitLocker on the specified drive with the provided password.

    Parameters:
        drive_letter (str): The letter of the drive to encrypt (e.g., 'C').
        password (str): The password to protect the BitLocker key.
    """
    # Check if BitLocker is already enabled
    status = check_bitlocker_status(drive_letter)
    if "FullyEncrypted" in status or "EncryptionInProgress" in status:
        print(f"Drive {drive_letter} is already encrypted or encryption is in progress.")
        return

    # Confirm user action
    confirmation = input(f"Are you sure you want to enable BitLocker on drive {drive_letter}? (yes/no): ").lower()
    if confirmation != 'yes':
        print("Operation cancelled.")
        return

    # Enable BitLocker with a password
    print(f"Enabling BitLocker on drive {drive_letter} with a password...")
    try:
        subprocess.run(
            ["powershell", "-Command", f"Enable-BitLocker -MountPoint {drive_letter}: -PasswordProtector -Password (ConvertTo-SecureString '{password}' -AsPlainText -Force)"],
            check=True
        )
        logging.info(f"BitLocker enabled on drive {drive_letter}.")
        print(f"BitLocker enabled successfully on drive {drive_letter}.")
    except subprocess.CalledProcessError as e:
        logging.error(f"Error enabling BitLocker: {e}")
        print(f"Error enabling BitLocker: {e}")
        return

    # Start encryption
    print(f"Starting encryption on drive {drive_letter}...")
    try:
        subprocess.run(
            ["powershell", "-Command", f"Start-BitLocker -MountPoint {drive_letter}:"],
            check=True
        )
        logging.info(f"Encryption started on drive {drive_letter}.")
        print(f"Encryption started successfully on drive {drive_letter}.")
    except subprocess.CalledProcessError as e:
        logging.error(f"Error starting encryption: {e}")
        print(f"Error starting encryption: {e}")

def main():
    drive_letter = input("Enter the drive letter to encrypt (e.g., C, D): ").upper()
    password = input("Enter the password to protect the drive: ")

    # Call the function to enable BitLocker and start encryption
    enable_bitlocker(drive_letter, password)

if __name__ == "__main__":
    main()